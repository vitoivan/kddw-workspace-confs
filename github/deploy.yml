name: Build and deploy

on:
    push:
        branches:
            - master
env:
    DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
    DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
    DIGITAL_OCEAN_HOST: ${{ secrets.DIGITAL_OCEAN_HOST }}
    DIGITAL_OCEAN_USERNAME: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
    DIGITAL_OCEAN_PRIVATE_KEY: ${{ secrets.DIGITAL_OCEAN_PRIVATE_KEY }}
    COMMIT_SHA: ${{ github.sha }}
    IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:${{ github.sha }}
    DIGITAL_OCEAN_ROOT: ~/app-config

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository code
              uses: actions/checkout@v3
            - name: Run tests
              run: |
                  npm install
                  echo "Running tests"

    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Check out repository code
              uses: actions/checkout@v3
            - name: Build
              run: |
                  docker build -t ${{ env.IMAGE_NAME }} .
            - name: Push to Docker Hub
              run: |
                  docker login -u ${{ env.DOCKER_HUB_USERNAME }} -p ${{ env.DOCKER_HUB_PASSWORD }}
                  docker push ${{ env.IMAGE_NAME }}
    deploy:
        ## Deploy to digital ocean
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository code
              uses: actions/checkout@v3
            - name: Deploy to Digital Ocean
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ env.DIGITAL_OCEAN_HOST }}
                  username: ${{ env.DIGITAL_OCEAN_USERNAME }}
                  key: ${{ env.DIGITAL_OCEAN_PRIVATE_KEY }}
                  script: |
                      cd ${{ env.DIGITAL_OCEAN_ROOT }}
                      docker login -u ${{ env.DOCKER_HUB_USERNAME }} -p ${{ env.DOCKER_HUB_PASSWORD }}
                      export EXPRESS_APP_IMAGE=${{ env.IMAGE_NAME }}
                      docker compose stop express-app
                      docker compose rm -f
                      docker system prune -f -a
                      docker compose up -d express-app
